<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lewdx.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.lewdx.entity.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="is_admin" jdbcType="BIT" property="isAdmin" />
    <result column="flag" jdbcType="BIT" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, sex, birthday, phone, email, head_pic, introduce, create_date, 
    update_date, is_admin, flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lewdx.entity.SysUser">
    insert into sys_user (id, username, password, 
      sex, birthday, phone, email, 
      head_pic, introduce, create_date, 
      update_date, is_admin, flag
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{birthday,jdbcType=DATE}, #{phone,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{headPic,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{isAdmin,jdbcType=BIT}, #{flag,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lewdx.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lewdx.entity.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lewdx.entity.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      head_pic = #{headPic,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      is_admin = #{isAdmin,jdbcType=BIT},
      flag = #{flag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--通过用户名模糊查询用户信息-->
  <select id="getUserListByCondition" resultMap="BaseResultMap" parameterType="string">
    select * from sys_user where 1=1
    <if test="_parameter!=null and _parameter!=''">
      and username like concat('%',#{userName},'%')
    </if>
  </select>

    <!--取消默认-->
    <update id="stopUser" parameterType="int">
        update sys_user set flag = 0 where id = #{id}
    </update>

    <!--设为默认-->
    <update id="startUser" parameterType="int">
        update sys_user set flag = 1 where id = #{id}
    </update>

    <!--通过角色id查询用户列表-->
    <select id="getUserListByRoleId" parameterType="int" resultMap="BaseResultMap">
        SELECT * from sys_user su WHERE su.id in
        (SELECT sru.USER_ID from sys_role_user sru where sru.ROLE_ID=#{roleId})
    </select>

    <!--根据用户名查询用户对象-->
    <select id="getUserByUsername" parameterType="string" resultMap="BaseResultMap">
    select * from sys_user where username = #{username}
    </select>

    <!--获取非授权用户-->
    <select id="getNoAuthUserByRoleId" resultMap="BaseResultMap">
      SELECT * from sys_user su WHERE su.id not in
      (SELECT sru.USER_ID from sys_role_user sru where sru.ROLE_ID=#{roleId})
      <if test="userName!=null and userName!=''">
        and username like concat('%',#{userName},'%')
      </if>
    </select>

    <!--批量授权用户-->
    <insert id="batchAuthUser">
      insert into sys_role_user(role_id,user_id) values
      <foreach collection="ids" item="userId" separator=",">
        (#{roleId},#{userId})
      </foreach>
    </insert>
    
    <!--解除用户授权-->
  <delete id="delAuthUserById">
        delete from sys_role_user where role_id=#{roleId} and user_id=#{userId}
    </delete>
  <!--通过用户名查询用户-->
  <select id="checkName" parameterType="string" resultType="int">
    select count(1) from sys_user where username=#{username}
  </select>
  <!--通过邮箱查询用户-->
  <select id="checkEmail" parameterType="string" resultType="int">
    select count(1) from sys_user where email=#{email}
  </select>
</mapper>